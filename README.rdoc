-- Rap Review App --

The Rap Review app allows users to rate and review albums as objectively as possible by allowing them to rate each song from an artist by album or mixtape.  The app then aggregates an average score of the album based on the totality of ratings of their songs.  Then each album/mixtape rating is aggregated to create an overall score for the artist.

8/17/16 - Things to Focus On
-----------------------------
1. Finish Artist Controller/Test - Completed
2. Paperclip Gem - Completed
3. Begin Album Controller/Test - Started

-- Notes --
* When writing out test for the delete method, be sure to use before instead of let.  Apparently, let lazily loads up the variable, not loading it until you actually call on it in a test.  Yet, with you're trying to delete something from the database, the query should already be in the database, which is why you would want to use before.  Before actually creates the variable and when it's called upon in the test, the test is actually querying it from the database which is to the advantage of the 'DELETE destroy' test because it can actually grab something from the database and remove it.

* When dealing with nested resources it's best to use the 'shallow nesting' feature which takes out the wordy-ness of nested URLs.  Looks like it focuses on using the names of both resources only on the index, create, and new paths.  If I'm thinking about the logic correctly, then it's only focusing on the index because it wants to make sure all the objects nested under the parent are available.  While, the only time it's important to have the parent id attached to a new instance of the child is when you're creating it.  Once it's logged into the database you don't have to worry about changing.

* Using Jamis Buck's idea on practical deep nesting to avoid breaking his "Resouces should never be nested more than one level deep" rule.  This rule will help maintain the codebase of the app in the long run. Made a few alterations to clean-up the routes. Should routes be nested more than one level deep?

* Ran into an issue running the test on the albums because of it's association with artist.  First I had to test the index to make sure it was properly assigning the artist to the instance variable.  Once this test was passed I focused on making sure the @albums variable was properly assigned based on the artist id.  The test failed several times before I made some changes to the factories explicitly stating the id for the artist and the artist_id for the album.  This will help greatly for understanding how to test the rest of the controller and for future test on the Songs Controller since it also deals with association.  Testing controllers with associations suck!

-----------------------------

8/18/16 - Things to Focus On
-----------------------------
1. Album Controller/Test - Unfinished
2. Begin Song Controller/Test - Didn't Start

-- Notes --
* Worked on the "GET show" and I ran into some issues trying to get the test and the controller right.  Because I'm using the shallow nesting feature on my routes there was some confusion on my end as to if I should still find the artist by id first and then find the albums through the artist or if I could just find the albums by the album id.  When I run rake routes it shows me that I can link to the show action of the album without placing the artist param first.  In the controller I called the album without having to locate the artist but in the controller test I have to call the artist_id first.  I'm assuming this is because of the associations that the test is picking on the album.  The warning seemed to indicate that a artist_id was needed in order to properly find the album.  I wonder does RSpec recognize shallow nesting or does that feature get overridden?

------------------------------

8/19/16 - Focus Points
--------------------------
1. Finish Album Controller/Test - Finished
2. Begin Song Controller/Test - Starting Next

-- Notes --
* The rest of the test went smooth for the most part.  Ran into a lot of errors that were familiar from the first controller test.  Because many of my issues were already documented I just troubleshooted the problems with old solutions and things seemed to workout fine.  The note about the delete method test came in handy the most.  Granted, when testing a controller dealing with associations, I had to pass in more specific arguments/params in order for the test to pick them up properly.  Also, the shallow nesting feature can cause a few headaches while testing so it's probably best to keep a screen up that shows you all of your routes so you can have a better idea of the args you may need to pass in.

--------------------------------

8/20/16 - Focus Points
---------------------------
1. Begin Song Controller/Test -
2. Add Pry to Workflow -
3. Begin User Test -

-- Notes --
